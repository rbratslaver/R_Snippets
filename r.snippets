snippet my_top10_cats
	map(select_if(${1:df}, negate(is.numeric)),
	~janitor::tabyl(.x) %>% arrange(desc(n)) %>% head(10) %>% adorn_totals())
	



snippet my_skim_options
	require(skimr)
	skim_with_defaults()
	skim_with(numeric = list(hist = NULL, complete = NULL, n = NULL)) 
	skim_with(integer = list(hist = NULL, complete = NULL, n = NULL)) 
	skim_format(numeric = list(nsmall = 0))
	skim_format(integer = list(nsmall = 0))
	skim_with(character = list(complete = NULL, n = NULL)) 
	skim_with(factor = list(complete = NULL, n = NULL))
	options(scipen=999, digits=1)
	skim(${1:df})
	
	
snippet my_top10_graph
	strings<-select_if(${1:df}, negate(is.numeric)) %>%
	#select(matches('|')) %>% 
	names()
	make_table <- function(df,var) {
	col <- sym(var)
	df %>% 
	count(!!col) %>% 
	mutate(percent_ = n/sum(n),
	variable = var) %>% 
	rename(value = !!col) %>% 
	top_n(5, n)
	}
	x <- map_df(c(strings), ~make_table(${1:df}, .x))
	ggpubr::ggbarplot(data=x, x='value', y='n',
	fill='variable',
	facet.by = 'variable',
	scales = 'free',
	x.text.angle = 90,
	rotate = T,
	sort.val = 'asc',
	legend = 'none')+
	ggrepel::geom_label_repel(aes(label = paste0(n,","," ",scales::percent(percent_))),point.padding = NA)



	



	
snippet my_top10_graph_v2
	#strings<-select_if(${1:df}, negate(is.numeric)) %>%
	strings <- ${1:df} %>% select_if(function(col) !is.numeric(col) & !lubridate::is.POSIXct(col) & !lubridate::is.Date(col)) %>% names()
	#select(matches('|')) %>% names()
	make_table <- function(df,var) {
	col <- sym(var)
	df %>% 
	count(!!col) %>% 
	mutate(percent_ = n/sum(n),
	variable = var) %>% 
	rename(value = !!col) %>% 
	top_n(5, n)
	}
	x <- map_df(c(strings), ~make_table(${1:df}, .x))
	x <- x %>% 
	ungroup() %>% 
	arrange(variable, n) %>% 
	mutate(.r = row_number())
	ggpubr::ggbarplot(data=x, x='.r', y='n',
	fill='variable',
	facet.by = 'variable',
	scales = 'free',
	x.text.angle = 90,
	rotate = T,
	legend = 'none')+
	ggrepel::geom_label_repel(aes(label = paste0(n,","," ",scales::percent(percent_))),point.padding = NA)+
	scale_x_continuous(breaks = x$.r, labels = x$'value)+
	ggpubr::rremove('x.text')
	
	
	
	
	
snippet my_cor
	nums <- ${1:df} %>% select_if(function(col) !is.POSIXct(col) & !is.Date(col) & is.numeric(col)) %>% 
	select(-matches('year|date')) 
	cor <- round(cor(nums, use='complete.obs'),1)
	p.mat <- cor_pmat(nums, use = 'complete.obs')
	ggcorrplot::ggcorrplot(cor, lab=T, p.mat = p.mat, sig.level = .05, tl.srt=90, hc.order = T,
	outline.color = 'white',
	ggtheme = ggplot2::theme_bw,
	colors = c("#ffa500", "white", "#a64ca6"))



snippet my_packages
	packages <- c("plotly", "treemap", "tidyverse", "skimr", "gapminder", "scales", "d3treeR",
	"leaflet", "lubridate", "reshape2", "magrittr","janitor", "GGally", "ggcorrplot", 
	"ggpubr", "cowplot", "ggrepel", "nycflights13", "ggstatsplot", "stats",
	"ISLR","RColorBrewer", "data.table", "splitstackshape", "bit64")
	lubripack::lubripack(packages)


snippet my_from_excel
	df <- read.delim("clipboard")


snippet my_to_excel
	write.csv(${1:df}, "x.csv")
	

snippet my_to_factor	
	${1:df} %<>%
	mutate_at(vars(${2:var}), as.factor)
	

snippet my_remove_objects
	rm(list = ls(pattern = '')
	
	
snippet my_assign
	${1:df} <- ${1:df} %>%
	
	
snippet my_nums
	nums <- select_if(${1:df}, is.numeric) %>% names()
	
	
snippet my_cats
	cats <- select_if(${1:df}, negate(is.numeric)) %>% names()
	
snippet my_relevel_factor
	${1:df}${2:var} = factor(${1:df}${2:var}, levels(${1:df}${2:var})[c(1,2,3,4)])



snippet my_to_lower
	${1:df}<- ${1:df}%>% 
	mutate_all(tolower) %>% 
	select_all(tolower) 

	
	
snippet my_cut
	${1:df} %<>% 
	mutate(cut_${2:var} = cut(${2:var}, breaks = c(-10,0,,Inf),
	labels = c('<0','0-','','',''), right = F))





	